#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- subset(datos, region = "Regi�n Metropolitana de Santiago ")
library(dplyr)
# abrir el archivo con los datos
datos <- read.csv2("EP08 Datos CASEN 2017.csv")
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- subset(datos, region = "Regi�n Metropolitana de Santiago ")
View(datos_pregunta_1)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- subset(datos, region = "Regi�n Metropolitana de Santiago")
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$region == "Regi�n Metropolitana de Santiago", drop = FALSE]
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$region == "Regi�n de Tarapac�" ]
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$sexo ==  "hombre"]
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$sexo ==  "hombre"]
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$sexo ==  "hombre", drop = FALSE]
View(datos_pregunta_1)
View(datos)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta_1 <- datos[datos$sexo ==  "Hombre", drop = FALSE]
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(sexo == "Mujer")
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
View(datos_pregunta1)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre")
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer")
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre")
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer")
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre") %>%
select(sexo, o10)
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer") %>%
select(sexo, o10)
View(hombres_santiago)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre") %>%
select(sexo, o10)
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer") %>%
select(sexo, o10)
muestra_hombres <- hombres_santiago %>%
sample_n(125, replace = FALSE)
muestra_mujeres <- mujeres_santiago %>%
sample_n(125, replace = FALSE)
# Función para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar una simulación de Monte Carlo
num_simulaciones <- 10000
diferencias_simuladas <- replicate(num_simulaciones, {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
return(diferencia_simulada)
})
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada))
return(p_valor)
}
# Aplicar la función para simular las diferencias de horas
p_valor <- simular_diferencia_horas(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor
print(p_valor)
# Función para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar una simulación de Monte Carlo
num_simulaciones <- 10000
diferencias_simuladas <- replicate(num_simulaciones, {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
return(diferencia_simulada)
})
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada))
return(p_valor)
}
# Aplicar la función para simular las diferencias de horas
p_valor <- simular_diferencia_horas(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor
print(p_valor)
# Función para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar una simulación de Monte Carlo
num_simulaciones <- 19999
diferencias_simuladas <- replicate(num_simulaciones, {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
return(diferencia_simulada)
})
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada))
return(p_valor)
}
# Aplicar la función para simular las diferencias de horas
p_valor <- simular_diferencia_horas(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor
print(p_valor)
# Función para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar una simulación de Monte Carlo
num_simulaciones <- 199999
diferencias_simuladas <- replicate(num_simulaciones, {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
return(diferencia_simulada)
})
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada))
return(p_valor)
}
# Aplicar la función para simular las diferencias de horas
p_valor <- simular_diferencia_horas(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor
print(p_valor)
# Función para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar una simulación de Monte Carlo
num_simulaciones <- 19999
diferencias_simuladas <- replicate(num_simulaciones, {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
return(diferencia_simulada)
})
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada))
return(p_valor)
}
# Aplicar la función para simular las diferencias de horas
p_valor <- simular_diferencia_horas(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor
print(p_valor)
# Función mejorada para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas_mejorada <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar simulaciones de Monte Carlo más robustas
num_simulaciones <- 10000
diferencias_simuladas <- numeric(num_simulaciones)
for (i in 1:num_simulaciones) {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
diferencias_simuladas[i] <- diferencia_simulada
}
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada), na.rm = TRUE)
return(p_valor)
}
# Aplicar la función mejorada para simular las diferencias de horas
p_valor_mejorado <- simular_diferencia_horas_mejorada(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor mejorado
print(p_valor_mejorado)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
datos_pregunta1 z- na.omit(datos_pregunta1)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
datos_pregunta1 <- na.omit(datos_pregunta1)
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre") %>%
select(sexo, o10)
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer") %>%
select(sexo, o10)
muestra_hombres <- hombres_santiago %>%
sample_n(125, replace = FALSE)
View(datos_pregunta1)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre") %>%
select(sexo, o10)
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer") %>%
select(sexo, o10)
muestra_hombres <- hombres_santiago %>%
sample_n(125, replace = FALSE)
muestra_mujeres <- mujeres_santiago %>%
sample_n(125, replace = FALSE)
#filjar una semilla para obtener la muestra aleatoria
set.seed(1412)
datos_pregunta1 <- datos %>%
filter(region == "Regi�n Metropolitana de Santiago")
# Eliminar filas con NA en la columna 'o10' de hombres_santiago
hombres_santiago <- datos_pregunta1 %>%
filter(sexo == "Hombre" & !is.na(o10)) %>%
select(sexo, o10)
# Eliminar filas con NA en la columna 'o10' de mujeres_santiago
mujeres_santiago <- datos_pregunta1 %>%
filter(sexo == "Mujer" & !is.na(o10)) %>%
select(sexo, o10)
# Obtener muestra de hombres sin NA en 'o10'
muestra_hombres <- hombres_santiago %>%
sample_n(125, replace = FALSE)
# Obtener muestra de mujeres sin NA en 'o10'
muestra_mujeres <- mujeres_santiago %>%
sample_n(125, replace = FALSE)
# Función mejorada para simular diferencias de horas bajo la hipótesis nula
simular_diferencia_horas_mejorada <- function(muestra_hombres, muestra_mujeres) {
# Calcular la diferencia de horas observada en las muestras
diferencia_observada <- mean(muestra_hombres$o10) - mean(muestra_mujeres$o10)
# Realizar simulaciones de Monte Carlo más robustas
num_simulaciones <- 10000
diferencias_simuladas <- numeric(num_simulaciones)
for (i in 1:num_simulaciones) {
# Mezclar aleatoriamente las horas de hombres y mujeres
horas_mezcladas <- c(muestra_hombres$o10, muestra_mujeres$o10)
horas_mezcladas <- sample(horas_mezcladas)
# Calcular la diferencia de horas simulada
diferencia_simulada <- mean(horas_mezcladas[1:125]) - mean(horas_mezcladas[126:250])
diferencias_simuladas[i] <- diferencia_simulada
}
# Calcular el p-valor
p_valor <- mean(abs(diferencias_simuladas) >= abs(diferencia_observada), na.rm = TRUE)
return(p_valor)
}
# Aplicar la función mejorada para simular las diferencias de horas
p_valor_mejorado <- simular_diferencia_horas_mejorada(muestra_hombres, muestra_mujeres)
# Mostrar el p-valor mejorado
print(p_valor_mejorado)
