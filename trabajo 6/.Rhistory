library(ggpubr)
library(ez)
library(tidyverse)
# leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
library(ggpubr)
library(ez)
library(tidyverse)
# leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
#filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Química")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
#print(prueba2$`Sphericity Corrections`)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
print(prueba2$`Sphericity Corrections`)
library(ggpubr)
library(ez)
library(tidyverse)
# leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
#filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Química")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
#print(prueba2$`Sphericity Corrections`)
View(datos_filtrados)
holm <- pairwise.t.test(datos_filtrados[["dificultad"]], datos_filtrados[["tiempo"]], p.adj = "holm", paired = TRUE)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
cat("\nCorrección de Holm\n")
print(holm)
library(ggpubr)
library(ez)
library(tidyverse)
# leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
#filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Computación")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
#print(prueba2$`Sphericity Corrections`)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
cat("\nCorrección de Holm\n")
print(holm)
View(datos_filtrados)
library(ggpubr)
library(ez)
library(tidyverse)
# Leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
# Filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Computación")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
library(ggpubr)
library(ez)
library(tidyverse)
# Leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
# Filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Computación")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
cat("\nCorrección de Holm\n")
print(holm)
