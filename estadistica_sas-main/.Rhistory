library(ggpubr)
library(ez)
library(tidyverse)
# leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
#filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Química")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
#print(prueba2$`Sphericity Corrections`)
library(ggpubr)
library(ez)
library(tidyverse)
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
datos_filtrados <- datos %>%
filter(datos$area == "Biologia")
library(ggpubr)
library(ez)
library(tidyverse)
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
datos_filtrados <- datos %>%
filter(datos$area == "Biologia")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
library(ggpubr)
library(ez)
library(tidyverse)
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
datos_filtrados <- datos %>%
filter(datos$area == "Biologia")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
library(ggpubr)
library(ez)
library(tidyverse)
# Leer los datos del archivo
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
# Filtrar los datos para obtener los que son de interes
datos_filtrados <- datos %>%
filter(datos$area == "Computación")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
library(ggpubr)
library(ez)
library(tidyverse)
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
datos_filtrados <- datos %>%
filter(datos$area == "Biología")
g<- ggqqplot(datos_filtrados, x = "tiempo", y = "difucultad", color = "dificultad")
print(g)
prueba2 <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(prueba2$aov))
print(prueba2$`Mauchly's Test for Sphericity`)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
cat("\nCorrección de Holm\n")
print(holm)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
print(holm)
test <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(test$aov))
print(test$`Mauchly's Test for Sphericity`)
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
print(holm)
install.packages("AalenJohansen")
install.packages("AalenJohansen")
install.packages("friendman")
help("friedman")
install.packages("friedman")
install.packages("friedman")
help("friedman")
help("Kruskal.test")
install.packages("Kruskal.test")
help("Pairwise.wilcox.test")
install.packages("Pairwise.wilcox.test")
install.packages("pchisq")
#Se usan las librerías necesarias para el ejercicio. Si no se encuentran instaladas en el equipo, se instalan automáticamente
if (!requireNamespace('ggpubr', quietly = TRUE)){
install.packages('ggpubr')
}
if (!requireNamespace('tidyverse', quietly = TRUE)){
install.packages('tidyverse')
}
if (!requireNamespace('ez', quietly = TRUE)){
install.packages('ez')
}
library(ggpubr)
library(ez)
library(tidyverse)
#Se lee el archivo .csv entregado
datos <- read.csv("EP06 Datos.csv", stringsAsFactors = TRUE)
#Se filtran los datos del .csv a los que nos conviene, siendo esto, los datos del área de biología
datos_filtrados <- datos %>%
filter(datos$area == "Biología")
#Se filtran los datos para cada dificultad y probar su normalidad para cada una en un gráfico QQ (y luego, en shapiro.test)
datos_filtrados_alta <- datos_filtrados %>%
filter(dificultad == "Alta")
datos_filtrados_media <- datos_filtrados %>%
filter(dificultad == "Media")
datos_filtrados_baja <- datos_filtrados %>%
filter(dificultad == "Baja")
# Create ggplot
g1 <- ggqqplot(datos_filtrados_alta, x = "tiempo", y = "difucultad", color = "red")
print(g1)
g2 <- ggqqplot(datos_filtrados_media, x = "tiempo", y = "difucultad", color = "blue")
print(g2)
g3 <- ggqqplot(datos_filtrados_baja, x = "tiempo", y = "difucultad", color = "cyan")
print(g3)
s1 <- shapiro.test(datos_filtrados_alta$tiempo)
print(s1)
s2 <- shapiro.test(datos_filtrados_media$tiempo)
print(s2)
s3 <- shapiro.test(datos_filtrados_baja$tiempo)
print(s3)
#nivel de significancia
alpha = 0.05
#Test de ANOVA para muestras correlacionadas
test <- ezANOVA(data = datos_filtrados, dv = tiempo, within  = dificultad, wid = id, return_aov = TRUE)
print(summary(test$aov))
print(test$`Mauchly's Test for Sphericity`)
#Se realiza Holm
holm <- pairwise.t.test(datos_filtrados[["tiempo"]], datos_filtrados[["dificultad"]], p.adj = "holm", paired = TRUE)
print(holm)
#Se usan las librerías necesarias para el ejercicio. Si no se encuentran instaladas en el equipo, se instalan automáticamente
if (!requireNamespace('ggpubr', quietly = TRUE)){
install.packages('ggpubr')
}
if (!requireNamespace('tidyverse', quietly = TRUE)){
install.packages('tidyverse')
}
if (!requireNamespace('ez', quietly = TRUE)){
install.packages('ez')
}
library(ggpubr)
library(ez)
library(tidyverse)
#Se lee el archivo .csv entregado
datos <- read.csv("EP07 Datos.csv")
#Se usan las librerías necesarias para el ejercicio. Si no se encuentran instaladas en el equipo, se instalan automáticamente
if (!requireNamespace('ggpubr', quietly = TRUE)){
install.packages('ggpubr')
}
if (!requireNamespace('tidyverse', quietly = TRUE)){
install.packages('tidyverse')
}
if (!requireNamespace('ez', quietly = TRUE)){
install.packages('ez')
}
library(ggpubr)
library(ez)
library(tidyverse)
#Se lee el archivo .csv entregado
datos <- read.csv("EP07 Datos.csv")
#Se usan las librerías necesarias para el ejercicio. Si no se encuentran instaladas en el equipo, se instalan automáticamente
if (!requireNamespace('ggpubr', quietly = TRUE)){
install.packages('ggpubr')
}
if (!requireNamespace('tidyverse', quietly = TRUE)){
install.packages('tidyverse')
}
if (!requireNamespace('ez', quietly = TRUE)){
install.packages('ez')
}
library(ggpubr)
library(ez)
library(tidyverse)
#Se lee el archivo .csv entregado
datos <- read.csv("EP07 Datos.csv")
#Usamos la seed 73
set.seed(73)
#Con los datos ya leídos, se filtran para tener nodo > 64
datos_filtrados = subset(datos, n.nodos > 64)
#Se define el nivel de significancia
alpha = 0.05
#Se filtra para cada versión del algoritmo
algoritmoB = sample_n(datos_filtrados$tiempo.B, 24)
